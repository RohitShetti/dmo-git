[Window Title]
Visual Studio Code

[Main Instruction]
Are you sure you want to paste 14 lines of text into the terminal?

[Content]
Preview:
[Window Title]
Visual Studio Code

â€¦
 
[ ] Do not ask me again  [Paste] [Paste as one line] [Cancel]


_____________________________________________________________________________________

			HTTP Observables - Steps



1) Create a JSON file -> move the data service to the JSON file 
2) Save it under src/api/cities.json
3) Angular.json - assets -> src/api
4) App.config - provider - httpclient
5) City.serviceobs.ts
6) Inside the cities.component.ts , call it inside ngOnInit()
7) City-detail.component.ts



angular.json (before obs)


{
  "$schema": "./node_modules/@angular/cli/lib/config/schema.json",
  "version": 1,
  "newProjectRoot": "projects",
  "projects": {
    "emovie": {
      "projectType": "application",
      "schematics": {},
      "root": "",
      "sourceRoot": "src",
      "prefix": "app",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:application",
          "options": {
            "outputPath": "dist/emovie",
            "index": "src/index.html",
            "browser": "src/main.ts",
            "polyfills": [
              "zone.js"
            ],
            "tsConfig": "tsconfig.app.json",
            "assets": [
              {
                "glob": "**/*",
                "input": "public"
              }
            ],
            "styles": [
              "node_modules/bootstrap/dist/css/bootstrap.min.css",
              "src/styles.css"
            ],
            "scripts": [
              "node_modules/bootstrap/dist/js/bootstrap.bundle.min.js"
            ],
            "server": "src/main.server.ts",
            "prerender": true,
            "ssr": {
              "entry": "server.ts"
            }
          },
          "configurations": {
            "production": {
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kB",
                  "maximumError": "1MB"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "2kB",
                  "maximumError": "4kB"
                }
              ],
              "outputHashing": "all"
            },
            "development": {
              "optimization": false,
              "extractLicenses": false,
              "sourceMap": true
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "configurations": {
            "production": {
              "buildTarget": "emovie:build:production"
            },
            "development": {
              "buildTarget": "emovie:build:development"
            }
          },
          "defaultConfiguration": "development"
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n"
        },
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "polyfills": [
              "zone.js",
              "zone.js/testing"
            ],
            "tsConfig": "tsconfig.spec.json",
            "assets": [
              {
                "glob": "**/*",
                "input": "public"
              }
            ],
            "styles": [
              "node_modules/bootstrap/dist/css/bootstrap.min.css",
              "node_modules/@fortawesome/fontawesome-free/css/all.min.css",
              "src/styles.css"        
            ],
            "scripts": [
              "node_modules/bootstrap/dist/js/bootstrap.bundle.min.js"
            ]
          }
        }
      }
    }
  },
  "cli": {
    "analytics": "65cd3dec-2397-43b7-9c0a-4e377774aefa"
  }
}


_________________________________________________________________________________________________________________

Booking CSS


/* Booking Container Styling */
.booking-container {
  background-color: #fafafa; /* Soft white background */
  padding: 40px;
  border-radius: 10px;
  text-align: center;
  color: #333; /* Dark text for readability */
  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1); /* Soft shadow for subtle depth */
  margin: 50px auto;
  max-width: 600px;
  transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.booking-container:hover {
  transform: scale(1.01);
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.15); /* Slightly deeper shadow on hover */
}

/* Heading Styling */
.booking-container h2 {
  font-size: 2.2rem;
  margin-bottom: 10px;
  font-family: 'Segoe UI', Tahoma, sans-serif;
  color: #222; /* Slightly darker heading */
  font-weight: 600;
}

/* Paragraph Styling */
.booking-container p {
  font-size: 1rem;
  margin-bottom: 20px;
  line-height: 1.6;
  font-family: 'Segoe UI', Tahoma, sans-serif;
  color: #555; /* Medium gray text for paragraph */
}

/* Button Container */
.buttons {
  display: flex;
  justify-content: center;
  gap: 15px;
  margin-top: 20px;
}

/* Button Styling */
.btn {
  padding: 12px 24px;
  border: 1px solid #ddd; /* Light border */
  border-radius: 6px;
  cursor: pointer;
  font-size: 1rem;
  background-color: #fff;
  color: #333;
  transition: background 0.2s ease, box-shadow 0.2s ease, transform 0.2s ease;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); /* Subtle shadow */
  font-weight: 500;
}

/* Hover Effect for Buttons */
.btn:hover {
  background-color: #f0f0f0; /* Light gray background on hover */
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Shadow depth increase */
  transform: translateY(-2px); /* Slight upward lift on hover */
}

/* Specific Button Styling */
.explore-btn {
  border-color: #ccc;
}

.book-now-btn {
  background-color: #4caf50;
  color: white;
  border-color: #4caf50;
}

.book-now-btn:hover {
  background-color: #45a049;
}

/* Responsive Styling */
@media (max-width: 768px) {
  .buttons {
    flex-direction: column;
    gap: 10px;
  }

  .btn {
    width: 100%;
  }
}
___________________________________________________________________________________________________________________________________________________________________________________




<nav class="navbar navbar-expand-lg navbar-dark bg-dark">
  <div class="container-fluid">
    <a class="navbar-brand" href="#">
      <i class="fas fa-plane-departure"></i> Travel Treasures
    </a>
    <button
      class="navbar-toggler"
      type="button"
      data-bs-toggle="collapse"
      data-bs-target="#navbarSupportedContent"
      aria-controls="navbarSupportedContent"
      aria-expanded="false"
      aria-label="Toggle navigation"
    >
      <span class="navbar-toggler-icon"></span>
    </button>

    <div class="collapse navbar-collapse" id="navbarSupportedContent">
      <!-- Left aligned navbar links -->
      <ul class="navbar-nav me-auto mb-2 mb-lg-0">
        <li class="nav-item">
          <a class="nav-link active" routerLink="/home" aria-current="page">Home</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" routerLink="/booking">Booking</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" routerLink="/cities">Cities</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" routerLink="/about-us">About Us</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" routerLink="/contact-us">Contact Us</a>
        </li>
      </ul>

      <!-- Search Form -->
      <form class="d-flex" role="search">
        <input
          class="form-control me-2"
          type="search"
          placeholder="Search"
          aria-label="Search"
        />
        <button class="btn btn-outline-success me-3" type="submit">Search</button>
      </form>

      <!-- Register Button -->
      <button 
        class="btn btn-primary" 
        routerLink="/register"
        type="button"
      >
        Register
      </button>
    </div>
  </div>
</nav>

<!-- Router outlet to display routed content -->
<router-outlet></router-outlet>


__________________________________________________________________________________________________________________________________________________________________________________



<div class="container mt-5">
    <div class="card shadow-lg" *ngIf="city; else loading">
      <div class="card-body">
        <h1 class="text-center card-title">Edit {{ city.description }}</h1>
        <form (ngSubmit)="onSave()">
          <div class="mb-3">

            <!-- Description   -->
            <label for="description" class="form-label">Description</label>
            <input
              type="text"
              class="form-control"
              id="description"
              [(ngModel)]="city.description"
              name="description"
              required
            />
          </div>

          <!-- Rating  -->
          <div class="mb-3">
            <label for="rating" class="form-label">Rating</label>
            <input
              type="number"
              class="form-control"
              id="rating"
              [(ngModel)]="city.rating"
              name="rating"
              min="1"
              max="5"
              required
            />
          </div>

          <!-- Cost  -->
          <div class="mb-3">
            <label for="cost" class="form-label">Cost (in Rupees)</label>
            <input
              type="number"
              class="form-control"
              id="cost"
              [(ngModel)]="city.cost"
              name="cost"
              required
            />
          </div>
          <button type="submit" class="btn btn-primary">Save</button>
        </form>
      </div>
    </div>
    <ng-template #loading>
      <p>Loading city details...</p>
    </ng-template>
  </div>
  